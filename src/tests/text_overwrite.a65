	.outfile "thumbnail.prg"

	 .word $0801
	 .org $0801

	 .scope
	 .word _next, 10                       ; Next line and current line number
	 .byte $97, "2,0:", $9e, " 2019", $AA, "60",0      ; POKE 2,0 : SYS 2019+60
_next:	 .word 0

iter1:	 .byte 0

	 .checkpc 2079
	 .advance 2079

	 ; C65GS IO
	 lda #$47
	 sta $d02f
	 lda #$53
	 sta $d02f

	 ; FAST cpu
	 LDA #65
	 sta 0

	 sei

	 ; enable 16-bit text mode (but normal chars)
	 lda #$01
	 sta $d054

	 ; Use 160 bytes per text line = 2x40 for normal +
	 ; 2x40 for extras for overwriting
	 lda #<160
	 sta $d058
	 lda #>160
	 sta $d059

	 ; Draw 80 characters per line (even if most end up invisible)
	 lda #80
	 sta $d05e

	 ;Set screen RAM to $00008000
	 lda #<$8000
	 sta $d060
	 lda #>$8000
	 sta $d061
	 lda #<$0000
	 sta $D062
	 lda #>$0000
	 sta $d063

	 ; Clear colour RAM
	 lda #$00
	 tax
*
	 lda #$00
	 sta $d800,x
	 sta $d900,x
	 sta $da00,x
	 sta $db00,x
	 dex
	 lda #$0e
	 sta $d800,x
	 sta $d900,x
	 sta $da00,x
	 sta $db00,x
	 
	 dex
	 bne -

	 ;Copy existing screen to $8000
	 lda #<$0400
	 sta $fb
	 lda #>$0400
	 sta $fc
	 lda #<$8000
	 sta $fd
	 lda #>$8000
	 sta $fe

copyloop:
	lda $fc
	cmp #$08
	beq donecopy

	ldx #40
linecopy:

	ldy #$00
	lda ($fb),y
	sta ($fd),y
	iny
	lda #$00
	sta ($fd),y

	inc $fb
	bne +
	inc $fc
*
	inc $fd
	bne +
	inc $fe
*
	inc $fd
	bne +
	inc $fe
*
	dex
	bne linecopy
	
	ldy #79
	lda #$00
*	sta ($fd),y
	dey
	bpl -
	lda $fd
	clc
	adc #80
	sta $fd
	lda $fe
	adc #0
	sta $fe
	


	jmp copyloop

donecopy:

	;Now setup some simple overlap on the 2nd line

	; GOTO token, moving render point to X=45+1
	lda #<45
	sta $80F0
	lda #>45
	sta $80F1
	lda #$90 ; GOTO ($10) + transparent background ($80)
	sta $d8F0
	lda #$00
	sta $d8F1

	;XXX for now there is a bug where the lower 2 bits of this char must be 0, or
	;else it gets used as the high byte of the position
	ldx #0
	ldy #0
*
	lda message,x
	and #$3f
	beq loop
	sta $80F2,y
	lda #$00
	sta $80F3,y
	lda #$00
	sta $d8F2,y
	lda colours,x
	sta $d8F3,y
	iny
	iny
	inx
	bne -	
	

loop:
	lda $d012
	cmp #$fc
	bne loop

	inc $80f0
	bne +
	inc $80f1

*	lda $d012
	cmp #$fc
	beq -

	jmp loop


message: .byte "THIS IS ACTUALLY TEXT                  ",0
colours: .byte 1,2,3,4,5,7,8,9,10,11,12,13,14,15,1,2,3,4,5,7,8,9,10

	.scend